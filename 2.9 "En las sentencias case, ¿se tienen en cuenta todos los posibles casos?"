// To change item text dynamically
	public boolean onPrepareOptionsMenu(Menu menu) {
		return true;
	}

	public boolean onCreateOptionsMenu(Menu menu) {
		MenuInflater inflater = getMenuInflater();
		inflater.inflate(R.menu.pedido_menu, menu);

		return true;
	}

	public boolean onOptionsItemSelected(MenuItem item) {
		switch (item.getItemId()) {
		case R.id.pedido_menu_clientesvisitados_opcion:
			ClientesVisitadosActivity();

			return true;
		case R.id.pedido_menu_listapedidos_opcion:
			ListaPedidosActivity();
			return true;
			
		case R.id.pedido_menu_salir_opcion:
			Salir();
			return true;
			
		case R.id.pedido_menu_sincronizar_opcion:
			Sincronizar();
			//Productos();
			return true;
		default:
			return super.onOptionsItemSelected(item);
		}
	}

	private void Sincronizar() {
		
		      new AlertDialog.Builder(Pedido.this)
		      .setTitle("SINCRONIZAR DATOS")
		      .setMessage("Esta Seguro que desa sincronizar los datos, Esto borrar� todo lo trabajado en este d�a.")
		      .setPositiveButton("OK", new DialogInterface.OnClickListener() {
		              public void onClick(DialogInterface dialog, int whichButton) {
		            	  Toast.makeText(getBaseContext(), "Sincronizando", Toast.LENGTH_SHORT).show();
		              }
		      })
		      .setNegativeButton("CANCELAR", new DialogInterface.OnClickListener() {
				
				@Override
				public void onClick(DialogInterface dialog, int which) {
					Toast.makeText(getBaseContext(), "Proceso de Sincronizacion Cancelado", Toast.LENGTH_SHORT).show();
					
				}
			})
		      .show();
	}
	
	private void Productos() {
		//Toast.makeText(getBaseContext(), "En proceso de Desarrollo", Toast.LENGTH_LONG).show();
		Intent intent = new Intent(Pedido.this, Existencia.class);
		//intent.putExtra("productos", getResultado().getProducto());
		intent.putExtra("resultado", getResultado());
		startActivity(intent);
	}

	private void LimpiarBusqueda() {
		getBuscarEditText().setText("");
		
	}

	private void Salir() {
		Intent intent = new Intent(Pedido.this, Login.class);
		startActivity(intent);
		
	}

	private void ListaPedidosActivity() {
		ConexionDB conexionDb = new ConexionDB();
		EncabezadoPedido pedido[] = conexionDb.VerPedidos(this);
		if (pedido == null){
			Toast.makeText(getBaseContext(), "NO SE HAN REALIZADO PEDIDOS", Toast.LENGTH_SHORT).show();
		}else{
			Intent listaPedidosIntent = new Intent(Pedido.this, ListaPedidos.class);
			listaPedidosIntent.putExtra("resultado", getResultado());
			
			startActivity(listaPedidosIntent);
		}
		
		//Toast.makeText(getBaseContext(), "En proceso de desarrollo", Toast.LENGTH_LONG).show();
		
	}

	private void ClientesVisitadosActivity() {
